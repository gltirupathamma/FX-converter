{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\react\\\\test\\\\src\\\\sample.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport converter from \"./converter.css\";\nconst arr = {\n  \"rates\": {\n    \"CAD\": 1.5187,\n    \"HKD\": 8.753,\n    \"ISK\": 149.7,\n    \"PHP\": 56.521,\n    \"DKK\": 7.4568,\n    \"HUF\": 345.0,\n    \"CZK\": 26.634,\n    \"AUD\": 1.6267,\n    \"RON\": 4.8365,\n    \"SEK\": 10.4188,\n    \"IDR\": 15917.2,\n    \"INR\": 85.3085,\n    \"BRL\": 5.4944,\n    \"RUB\": 77.7388,\n    \"HRK\": 7.5719,\n    \"JPY\": 122.14,\n    \"THB\": 35.418,\n    \"MYR\": 4.8287\n  },\n  \"base\": \"EUR\",\n  \"date\": \"2020-06-09\"\n};\n\nclass Converter extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.convertHandler = () => {\n      if (this.state.fromCurrency !== this.state.toCurrency) {\n        axios.get(`http://api.openrates.io/latest?base=${this.state.fromCurrency}&symbols=${this.state.toCurrency}`).then(response => {\n          const result = this.state.amount * response.data.rates[this.state.toCurrency];\n          this.setState({\n            result: result.toFixed(5)\n          });\n        }).catch(error => {\n          console.log(\"Opps\", error.message);\n        });\n      } else {\n        this.setState({\n          result: \"You cant convert the same currency!\"\n        });\n      }\n    };\n\n    this.selectHandler = event => {\n      if (event.target.name === \"from\") {\n        this.setState({\n          fromCurrency: event.target.value\n        });\n      } else {\n        if (event.target.name === \"to\") {\n          this.setState({\n            toCurrency: event.target.value\n          });\n        }\n      }\n    };\n\n    this.state = {\n      result: null,\n      fromCurrency: \"USD\",\n      toCurrency: \"GBP\",\n      amount: 1,\n      currencies: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"http://api.openrates.io/latest\").then(response => {\n      const currencyAr = [\"EUR\"];\n\n      for (const key in arr) {\n        currencyAr.push(key);\n      }\n\n      console.log(\"fffff\", arr);\n      this.setState({\n        currencies: currencyAr\n      });\n    }).catch(err => {\n      console.log(\"oppps\", err);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Converter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Currency\"), \"Converter\", /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"money\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"\\uD83D\\uDCB5\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"From\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      name: \"amount\",\n      type: \"text\",\n      value: this.state.amount,\n      onChange: event => this.setState({\n        amount: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"from\",\n      onChange: event => this.selectHandler(event),\n      value: this.state.fromCurrency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, this.state.currencies.map(cur => /*#__PURE__*/React.createElement(\"option\", {\n      key: cur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, cur))), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"to\",\n      onChange: event => this.selectHandler(event),\n      value: this.state.toCurrency,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, this.state.currencies.map(cur => /*#__PURE__*/React.createElement(\"option\", {\n      key: cur,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 15\n      }\n    }, cur))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.convertHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, \"Convert\"), this.state.result && /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, this.state.result)));\n  }\n\n}\n\nexport default Converter;","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/react/test/src/sample.js"],"names":["React","axios","converter","arr","Converter","Component","constructor","props","convertHandler","state","fromCurrency","toCurrency","get","then","response","result","amount","data","rates","setState","toFixed","catch","error","console","log","message","selectHandler","event","target","name","value","currencies","componentDidMount","currencyAr","key","push","err","render","map","cur"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport converter from \"./converter.css\";\r\nconst arr= {\"rates\":\r\n{\r\n    \"CAD\":1.5187,\r\n    \"HKD\":8.753,\r\n    \"ISK\":149.7,\r\n    \"PHP\":56.521,\r\n    \"DKK\":7.4568,\r\n    \"HUF\":345.0,\r\n    \"CZK\":26.634,\r\n    \"AUD\":1.6267,\r\n    \"RON\":4.8365,\r\n    \"SEK\":10.4188,\r\n    \"IDR\":15917.2,\r\n    \"INR\":85.3085,\r\n    \"BRL\":5.4944,\r\n    \"RUB\":77.7388,\r\n    \"HRK\":7.5719,\r\n    \"JPY\":122.14,\r\n    \"THB\":35.418,\r\n  \"MYR\":4.8287},\r\n    \"base\":\"EUR\",\r\n    \"date\":\"2020-06-09\"}\r\nclass Converter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      result: null,\r\n      fromCurrency: \"USD\",\r\n      toCurrency: \"GBP\",\r\n      amount: 1,\r\n      currencies: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\"http://api.openrates.io/latest\")\r\n      .then(response => {\r\n    \r\n        const currencyAr = [\"EUR\"];\r\n        for (const key in arr) {\r\n          currencyAr.push(key);\r\n        }\r\n        console.log(\"fffff\",arr)\r\n        this.setState({ currencies: currencyAr });\r\n      })\r\n      .catch(err => {\r\n        console.log(\"oppps\", err);\r\n      });\r\n  }\r\n  convertHandler = () => {\r\n    if (this.state.fromCurrency !== this.state.toCurrency) {\r\n      axios\r\n        .get(\r\n          `http://api.openrates.io/latest?base=${\r\n            this.state.fromCurrency\r\n          }&symbols=${this.state.toCurrency}`\r\n        )\r\n        .then(response => {\r\n          const result =\r\n            this.state.amount * response.data.rates[this.state.toCurrency];\r\n          this.setState({ result: result.toFixed(5) });\r\n        })\r\n        .catch(error => {\r\n          console.log(\"Opps\", error.message);\r\n        });\r\n    } else {\r\n      this.setState({ result: \"You cant convert the same currency!\" });\r\n    }\r\n  };\r\n  selectHandler = event => {\r\n    if (event.target.name === \"from\") {\r\n      this.setState({ fromCurrency: event.target.value });\r\n    } else {\r\n      if (event.target.name === \"to\") {\r\n        this.setState({ toCurrency: event.target.value });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"Converter\">\r\n        <h2>\r\n          <span>Currency</span>Converter\r\n          <span role=\"img\" aria-label=\"money\">\r\n            &#x1f4b5;\r\n          </span>\r\n        </h2>\r\n        <div className=\"From\">\r\n          <input\r\n            name=\"amount\"\r\n            type=\"text\"\r\n            value={this.state.amount}\r\n            onChange={event => this.setState({ amount: event.target.value })}\r\n          />\r\n          <select\r\n            name=\"from\"\r\n            onChange={event => this.selectHandler(event)}\r\n            value={this.state.fromCurrency}\r\n          >\r\n            {this.state.currencies.map(cur => (\r\n              <option key={cur}>{cur}</option>\r\n            ))}\r\n          </select>\r\n          <select\r\n            name=\"to\"\r\n            onChange={event => this.selectHandler(event)}\r\n            value={this.state.toCurrency}\r\n          >\r\n            {this.state.currencies.map(cur => (\r\n              <option key={cur}>{cur}</option>\r\n            ))}\r\n          </select>\r\n          <button onClick={this.convertHandler}>Convert</button>\r\n          {this.state.result && <h3>{this.state.result}</h3>}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Converter;"]},"metadata":{},"sourceType":"module"}